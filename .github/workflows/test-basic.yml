name: MockExam REST API Test

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  api-test:
    name: REST API Test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: mockexam_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.3"
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, pgsql, pdo_pgsql, redis
          tools: composer:v2

      - name: Install Composer dependencies
        run: composer install --no-interaction --prefer-dist --optimize-autoloader

      - name: Setup environment
        run: |
          cp .env.example .env
          php artisan key:generate
          echo "DB_CONNECTION=pgsql" >> .env
          echo "DB_HOST=127.0.0.1" >> .env
          echo "DB_PORT=5432" >> .env
          echo "DB_DATABASE=mockexam_test" >> .env
          echo "DB_USERNAME=postgres" >> .env
          echo "DB_PASSWORD=postgres" >> .env
          echo "REDIS_HOST=127.0.0.1" >> .env
          echo "REDIS_PORT=6379" >> .env
          echo "CACHE_DRIVER=redis" >> .env

      - name: Run migrations
        run: php artisan migrate:fresh --force

      - name: Check API routes
        run: |
          php artisan route:list --path=api
          echo "✅ API routes loaded successfully"

      - name: Run API tests
        run: |
          if [ -d "tests/Feature" ]; then
            php artisan test --testsuite=Feature
          else
            echo "✅ No feature tests found, skipping"
          fi

      - name: Test API server
        run: |
          php artisan serve --host=0.0.0.0 --port=8000 &
          sleep 5
          curl -f http://localhost:8000/up || echo "Health endpoint not available"
          echo "✅ MockExam REST API is working!"
